{
    // Usare IntelliSense per informazioni sui possibili attributi.
    // Al passaggio del mouse vengono visualizzate le descrizioni degli attributi esistenti.
    // Per altre informazioni, visitare: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: file corrente",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Python: marching cubes",
            "type": "python",
            "request": "launch",
            "program": "marching_cubes_skimage.py",
            "cwd": "${workspaceFolder}/dev_notebooks",
            "console": "integratedTerminal",
            "justMyCode": false,
            "env": {
                "LD_LIBRARY_PATH": "/home/castelli/anaconda3/envs/neuroseg_pip/lib",
                "DISPLAY": "localhost:10.0"
            }
        },
        {
            "name": "Python: instance segmentation",
            "type": "python",
            "request": "launch",
            "program": "voronoi_segment.py",
            "cwd": "${workspaceFolder}/examples",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-i",
                "/mnt/ssd2/inference_spim/asd_sub.tif",
                "-o",
                "/mnt/ssd2/inference_spim/out_voronoi_asd_sub",
                "-b",
                "20"
            ],  
            "env": {
                "LD_LIBRARY_PATH": "/home/castelli/anaconda3/envs/neuroseg_pip/lib"
            }
        },
        {
            "name": "Python: train 2D EM",
            "type": "python",
            "request": "launch",
            "program": "train.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "cwd": "${workspaceFolder}/examples",
            "args": [
                "-c",
                "epfl_em_2d.yml"
            ]
        },
        {
            "name": "Python: train 2D SPIM",
            "type": "python",
            "request": "launch",
            "program": "train.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "cwd": "${workspaceFolder}/examples",
            "args": [
                "-c",
                "train_spim.yml"
            ],
            "env": {
                "LD_LIBRARY_PATH": "/home/castelli/anaconda3/envs/neuroseg_pip/lib"
            }
        },
        {
            "name": "Python: predict 2d EM",
            "type": "python",
            "request": "launch",
            "program": "predict_em_2d.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "cwd": "${workspaceFolder}/examples"
        },
        {
            "name": "Python: predict 2d zip",
            "type": "python",
            "request": "launch",
            "program": "predict.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "cwd": "${workspaceFolder}/examples",
            "args": [
                "-c",
                "predict_zip_2d.yml"
            ],
            "env": {
                "LD_LIBRARY_PATH": "/home/castelli/anaconda3/envs/neuroseg_pip/lib"
            }
        },
        {
            "name": "Python: split webknossos dataset",
            "type": "python",
            "request": "launch",
            "program": "dataset_splitter.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "cwd": "${workspaceFolder}/neuroseg/utils",
            "args": [
                "-d",
                "/mnt/NASoneScratch/castelli/webknossos_downloads/completed",
                "--train",
                "0.7",
                "--test",
                "0.2",
                "--val",
                "0.1",
                "-m",
                "normal",
                "--frame_pattern",
                "_frame",
                "--mask_pattern",
                "_annotation",
                "-e",
                "tiff"
            ]
        }
    ]
}